.equiv @sbrk, 9
.equiv @print_string, 4
.equiv @print_char, 11
.equiv @print_int, 1
.equiv @exit, 10
.equiv @exit2, 17

.text
jal Main
li a0, @exit
ecall

.globl Main
Main:
sw fp, -8(sp)
mv fp, sp
li t6, 32
sub sp, sp, t6
sw ra, -4(fp)
li t0, 4
sw t0, -28(fp)
lw t1, -28(fp)
mv a0, t1
jal alloc
mv t0, a0
sw t0, -16(fp)
lw t1, -28(fp)
mv a0, t1
jal alloc
mv t3, a0
la t0, FacComputeFac
sw t0, -28(fp)
lw t1, -28(fp)
sw t1, 0(t3)
sw t3, -28(fp)
lw t0, -16(fp)
lw t1, -28(fp)
sw t1, 0(t0)
lw t1, -16(fp)
beqz t1, Main_null1_1_0
jal Main_null1_2_0
Main_null1_1_0:
jal Main_null1
Main_null1_2_0:
lw t1, -16(fp)
lw t4, 0(t1)
lw t4, 0(t4)
li t0, 6
sw t0, -28(fp)
sw t5, -32(fp)
lw t0, -16(fp)
mv a2, t0
lw t0, -28(fp)
mv a3, t0
jalr t4
mv t0, a0
lw t5, -32(fp)
mv t5, t0
mv a1, t5
li a0, @print_int
ecall
li a1, 10
li a0, @print_char
ecall
jal Main_main_end
Main_null1:
la a0, msg_1
j error
Main_main_end:
lw a0, -28(fp)
addi sp, sp, 32
lw ra, -4(fp)
lw fp, -8(fp)
jr ra

.globl FacComputeFac
FacComputeFac:
sw fp, -8(sp)
mv fp, sp
li t6, 32
sub sp, sp, t6
sw ra, -4(fp)
sw s1, -12(fp)
li t3, 1
slt t4, a3, t3
beqz t4, FacComputeFac_if1_else_1_1
jal FacComputeFac_if1_else_2_1
FacComputeFac_if1_else_1_1:
jal FacComputeFac_if1_else
FacComputeFac_if1_else_2_1:
li t0, 1
sw t0, -32(fp)
jal FacComputeFac_if1_end
FacComputeFac_if1_else:
lw t5, 0(a2)
lw t5, 0(t5)
li t3, 1
sub t0, a3, t3
sw t0, -20(fp)
sw a2, -24(fp)
sw a3, -28(fp)
lw t0, -24(fp)
mv a2, t0
lw t0, -20(fp)
mv a3, t0
jalr t5
mv t0, a0
lw a2, -24(fp)
lw a3, -28(fp)
mv s1, t0
mul t0, a3, s1
sw t0, -32(fp)
FacComputeFac_if1_end:
lw s1, -12(fp)
lw a0, -32(fp)
addi sp, sp, 32
lw ra, -4(fp)
lw fp, -8(fp)
jr ra

.globl error
error:
mv a1, a0
li a0, @print_string
ecall
li a1, 10
li a0, @print_char
ecall
li a0, @exit
ecall
abort_17:
j abort_17

.globl alloc
alloc:
mv a1, a0
li a0, @sbrk
ecall
jr ra

.data

.globl msg_0
msg_0:
.asciiz "null pointer"
.align 2

.globl msg_1
msg_1:
.asciiz "array index out of bounds"
.align 2


