Starting a Gradle Daemon, 83 busy Daemons could not be reused, use --status for details
> Task :compileJava UP-TO-DATE
> Task :processResources NO-SOURCE
> Task :classes UP-TO-DATE

> Task :run
func Main() 
t7 = 16
t6 = alloc(t7)
t9 = 16
t10 = alloc(t9)
t11 = @A-idk
t12 = @B-something
t13 = @B-something1
t14 = @C-something3
[t10 + 0] = t11
[t10 + 1] = t12
[t10 + 2] = t13
[t10 + 3] = t14
[t6 + 0] = t10
x = t6
t17 = x
t15 = [t17 + 0]
t16 = [t15 + 8]
call t16(t17)
k = t15
t19 = 1
goto main_end:
main_end:
return t19

func A-idk(this a b)
t20 = z
t24 = 5
t22 = t24 + 1
t23 = t22 * 4
t21 = alloc(t23)
[t21 + 0] = t24
[t21 + 4] = 0 
[t21 + 8] = 0 
[t21 + 12] = 0 
[t21 + 16] = 0 
[t21 + 20] = 0 
z = t21
t25 = 2
a = t25
t26 = 4
c = t26
[this + 8] = t26
t27 = 1
goto idk_end:
idk_end:
return t27


func B-something(this)
t28 = 1
goto something_end:
something_end:
return t28

func B-something1(this)
t29 = 1
goto something1_end:
something1_end:
return t29


func C-something3(this)
t30 = 1
c = t30
[this + 12] = t30
t31 = 1
goto something3_end:
something3_end:
return t31



Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

See https://docs.gradle.org/7.2/userguide/command_line_interface.html#sec:command_line_warnings

BUILD SUCCESSFUL in 10s
2 actionable tasks: 1 executed, 1 up-to-date
